[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Abhinav\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Abhinav\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.1 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 759.9106ms
[debug]       Load.loadUnit: defsScala took 0.5843ms
[debug] [Loading] Scanning directory C:\Users\Abhinav\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Abhinav\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 93.5083 ms
[debug]           Load.resolveProject(global-plugins) took 312.4989ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Abhinav\.sbt\1.0\plugins, plugins: List(<none>))) took 613.4131ms
[debug] [Loading] Done in C:\Users\Abhinav\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 888.0558ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4069ms
[debug]     Load.loadUnit(file:/C:/Users/Abhinav/.sbt/1.0/plugins/, ...) took 1870.9578ms
[debug]   Load.apply: load took 3795.5526ms
[debug]   Load.apply: resolveProjects took 17.5382ms
[debug]   Load.apply: finalTransforms took 289.2675ms
[debug]   Load.apply: config.delegates took 19.009ms
[debug]   Load.apply: Def.make(settings)... took 1784.6129ms
[debug]   Load.apply: structureIndex took 351.5732ms
[debug]   Load.apply: mkStreams took 4.1278ms
[info] loading global plugins from C:\Users\Abhinav\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 15823.5726ms
[debug]           Load.loadUnit: plugins took 67.3986ms
[debug]           Load.loadUnit: defsScala took 0.0074ms
[debug] [Loading] Scanning directory C:\Users\Abhinav\Desktop\Demyst\Ipify\project
[debug]             Load.loadUnit: mkEval took 44.1084ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Abhinav\Desktop\Demyst\Ipify\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.6251 ms
[info] loading settings for project ipify-build from idea.sbt ...
[debug]               Load.resolveProject(ipify-build) took 22.4921ms
[debug]             Load.loadTransitive: finalizeProject(Project(id ipify-build, base: C:\Users\Abhinav\Desktop\Demyst\Ipify\project, plugins: List(<none>))) took 30.3877ms
[debug] [Loading] Done in C:\Users\Abhinav\Desktop\Demyst\Ipify\project, returning: (ipify-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 542.1489ms
[debug]           Load.loadUnit: cleanEvalClasses took 14.5522ms
[debug]         Load.loadUnit(file:/C:/Users/Abhinav/Desktop/Demyst/Ipify/project/, ...) took 625.9258ms
[debug]       Load.apply: load took 628.8777ms
[debug]       Load.apply: resolveProjects took 0.2098ms
[debug]       Load.apply: finalTransforms took 34.1931ms
[debug]       Load.apply: config.delegates took 0.5397ms
[debug]       Load.apply: Def.make(settings)... took 231.9754ms
[debug]       Load.apply: structureIndex took 112.2371ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\Abhinav\Desktop\Demyst\Ipify\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3303.3954ms
[debug]     Load.loadUnit: defsScala took 0.0062ms
[debug] [Loading] Scanning directory C:\Users\Abhinav\Desktop\Demyst\Ipify
[debug]       Load.loadUnit: mkEval took 0.6075ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 11.9583 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 83.7976ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Abhinav\Desktop\Demyst\Ipify, plugins: List(<none>))) took 100.2631ms
[debug] [Loading] Done in C:\Users\Abhinav\Desktop\Demyst\Ipify, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 9996.764ms
[debug]     Load.loadUnit: cleanEvalClasses took 121.9747ms
[debug]   Load.loadUnit(file:/C:/Users/Abhinav/Desktop/Demyst/Ipify/, ...) took 13423.8559ms
[debug] Load.apply: load took 13428.7928ms
[debug] Load.apply: resolveProjects took 0.2211ms
[debug] Load.apply: finalTransforms took 65.8436ms
[debug] Load.apply: config.delegates took 0.4667ms
[debug] Load.apply: Def.make(settings)... took 328.9574ms
[debug] Load.apply: structureIndex took 64.5855ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to Ipify (in build file:/C:/Users/Abhinav/Desktop/Demyst/Ipify/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58380 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58380, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Ipify (in build file:/C:/Users/Abhinav/Desktop/Demyst/Ipify/)
[debug] > Exec(idea-shell, None, None)
